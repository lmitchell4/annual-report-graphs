```{r}
# Title: D-WQ Annual Report Stats
# Purpose: Generate stats for D-WQ annual reports
# Author: Sarah Perry
# Contact: sarah.perry@water.ca.gov
```

```{r warning=FALSE, message=FALSE}
# import packages
library(zoo)
library(scales)
library(tidyverse)
library(ggplot2)
library(lubridate)
library(NADA)

# import functions
source('annualReport_funcs.R')
```

```{r message=FALSE}
#import data
wq_dat <- read_csv('C:/R/annual-report-graphs/2018-2019 Discrete WQ Data_060320.csv')

#convert month to abbrv
wq_dat$Month <- month.abb[wq_dat$Month]

#add month-year column
wq_dat$Monyear <- paste(wq_dat$Month,wq_dat$Year, sep = ' ')

#add 'full group' column (ie. region + month-year)
wq_dat$Full_group <- paste(wq_dat$Region,wq_dat$Monyear, sep = ',')

check <- subset(wq_dat,DissNitrateNitrite_sign == '<', c(Station,Region,Monyear,DissNitrateNitrite))
```

```{r}
#change sign column to logical
wq_dat$DissNitrateNitrite_sign[wq_dat$DissNitrateNitrite_sign == '<'] <- TRUE
wq_dat$DissNitrateNitrite_sign[is.na(wq_dat$DissNitrateNitrite_sign)] <- FALSE
wq_dat$DissNitrateNitrite_sign <- as.logical(wq_dat$DissNitrateNitrite_sign)

#change type of full group column to factor
wq_dat$Full_group <- as.factor(wq_dat$Full_group)
```
U
```{r}
#define vectors for cenfit function
obs <- wq_dat$DissNitrateNitrite
censored <- wq_dat$DissNitrateNitrite_sign
groups <- wq_dat$Full_group

cen_dat <- cenfit(obs, censored, groups)

df_cenStats <- censtats(cen_dat)
df_cenStats
```

```{r}
analyte_dat[analyte_dat$mean == 0.00000000]
```

```{r warning=FALSE, message=FALSE}
analyte_dat <- read_csv('C:/R/AnnualReport/DissNitrateNitrite.csv')

#fix dates
analyte_dat$monyear <- as.Date(strptime(analyte_dat$date, '%m/%d/%Y'),'%b-%y')

#set no mean to NA
analyte_dat$mean[analyte_dat$mean == 0.00000000] <- NA

#create segment subset
seg_subset <-subset(analyte_dat, is.na(analyte_dat$mean))

#create segment df
seg_dat = data.frame(
  x = seg_subset$monyear,
  xend = seg_subset$monyear,
  y = 0,
  yend = seg_subset$RL,
  region = seg_subset$region
)

analyte_dat
```

```{r}
#create theme
blank_theme <- theme_bw() + theme(#panel.border = element_blank(),
                      # panel.grid.major = element_blank(),
                       panel.grid.major.x = element_blank() ,
                       panel.grid.minor = element_blank(),
                       axis.line = element_blank(),#line(color = 'black'),
                       axis.text = element_text(color = 'black', size = 10, family = 'sans'),
                       axis.text.x = element_text(angle = 90, vjust=0.5, margin = margin(t = 1)),
                       axis.title.x = element_blank(),#text(size = 14, family = 'sans'),
                       axis.title.y = element_blank(),#text(size = 14, family = 'sans'),
                       plot.title = element_text(size=13, face='bold', hjust = 0.5),
                       legend.position='top',
                       legend.title = element_blank())
#graph
ggplot() +
  geom_segment(data = seg_dat, aes(x = x, xend = xend, y = y, yend = yend, color = region), size = 3, linetype = 2) +
  geom_line(data = analyte_dat, aes(x = monyear, y = mean, group = region, color = region), size = 3) +
  geom_point(data = analyte_dat, aes(x = monyear, y = mean, group = region, color = region, fill = region), shape = 21, size = 5) +
  scale_color_manual(values = c('#17becf','#ff7f0e','#2ca02c','#d62728','#e377c2','#8c564b')) +
  scale_fill_manual(values = c('#17becf','#ff7f0e','#2ca02c','#d62728','#e377c2','#8c564b')) +
  ylim(0,2.1) +
  ggtitle(bquote(bold(paste('Chlorophyll ', bolditalic('\u03b1'),' (\u03bc','g/L)')))) +
  scale_x_date(labels = date_format('%b-%y'), breaks = '1 month') +
  blank_theme

#ggsave(filename = 'C:/R/AnnualReport/Chla_1.png', plot = last_plot(), width = 7.3, height = 4.8)
```
```{r}
colnames(analyte_dat)
```

```{r}
wq_dat$Monyear <- format(strptime(wq_dat$Date, '%m/%d/%Y'),'%Y-%m')
wq_dat$Monyear <- as.Date(as.yearmon(wq_dat$Monyear))

test <-wq_dat %>% 
  group_by(Region,Monyear) %>% 
  summarise(SpCndSurface_Avg = mean(SpCndSurface),
            TurbiditySurface_Avg = mean(TurbiditySurface))

```

```{r}
test1 <- test[test$Region == 'Central Delta' | test$Region == 'Northern Interior Delta' | test$Region == 'Southern Interior Delta',]
```

```{r}
#fix dates
#wq_dat$Monyear <- as.Date(strptime(wq_dat$Date, '%m/%d/%Y'),'%b-%y')

ggplot() +
  geom_line(data = test, aes(x = Monyear, y = SpCndSurface_Avg, group = Region, color = Region), size = 1.3) +
  geom_point(data = test, aes(x = Monyear, y = SpCndSurface_Avg, group = Region, color = Region, fill = Region), size = 3) +
  scale_color_manual(values =  c('#17becf','#ff7f0e','#2ca02c','#d62728','#e377c2','#8c564b')) +
  scale_fill_manual(values = c('#17becf','#ff7f0e','#2ca02c','#d62728','#e377c2','#8c564b')) +
  ggtitle(bquote(bold(paste('Specific Conductance (',"\u03bc",'S/cm)')))) +
  scale_x_date(labels = date_format('%b-%y'), breaks = '1 month') +
  blank_theme

ggsave(filename = 'C:/R/AnnualReport/SpCndSurface2.png', plot = last_plot(), width = 7.3, height = 4.8)
```

```{r Useful Funcs}
showMethods(class=class(cen_dat), where=search())

selectMethod(show, class(cen_dat))

map_df(boop, ~as.data.frame(.x), .id="id")
```

